digraph tree {
rankdir=TB;
nodesep=0.6;
ranksep=0.8;
digraph tree {
    "Program_5264";
    "Statement_5712";
    "x";
    "=";
    "Expression_5824";
    "10";
    "Statement_6160";
    "y";
    "=";
    "Expression_6272";
    "20";
    "Statement_6496";
    "print";
    "Expression_6832";
    "Expression_6608";
    "x";
    "+";
    "Expression_6944";
    "y";
    "Statement_7280";
    "if";
    "Condition_7392";
    "Expression_7728";
    "x";
    ">";
    "Expression_7952";
    "y";
    "then";
    "Statement_8176";
    "print";
    "Expression_8288";
    "x";
    "else";
    "Statement_8624";
    "print";
    "Expression_9072";
    "y";
    "Statement_8960";
    "while";
    "Condition_9184";
    "Expression_9296";
    "x";
    "<";
    "Expression_9408";
    "100";
    "do";
    "Statement_9632";
    "{";
    "Statement_9744";
    "x";
    "=";
    "Expression_3328";
    "Expression_3216";
    "x";
    "+";
    "Expression_3440";
    "10";
    "Statement_3552";
    "print";
    "Expression_3664";
    "x";
    "}";
    "Program_5264" -> "Statement_5712";
    "Program_5264" -> "Statement_6160";
    "Program_5264" -> "Statement_6496";
    "Program_5264" -> "Statement_7280";
    "Program_5264" -> "Statement_8960";
    "Statement_5712" -> "x";
    "Statement_5712" -> "=";
    "Statement_5712" -> "Expression_5824";
    "Expression_5824" -> "10";
    "Statement_6160" -> "y";
    "Statement_6160" -> "=";
    "Statement_6160" -> "Expression_6272";
    "Expression_6272" -> "20";
    "Statement_6496" -> "print";
    "Statement_6496" -> "Expression_6832";
    "Expression_6832" -> "Expression_6608";
    "Expression_6832" -> "+";
    "Expression_6832" -> "Expression_6944";
    "Expression_6608" -> "x";
    "Expression_6944" -> "y";
    "Statement_7280" -> "if";
    "Statement_7280" -> "Condition_7392";
    "Statement_7280" -> "then";
    "Statement_7280" -> "Statement_8176";
    "Statement_7280" -> "else";
    "Statement_7280" -> "Statement_8624";
    "Condition_7392" -> "Expression_7728";
    "Condition_7392" -> ">";
    "Condition_7392" -> "Expression_7952";
    "Expression_7728" -> "x";
    "Expression_7952" -> "y";
    "Statement_8176" -> "print";
    "Statement_8176" -> "Expression_8288";
    "Expression_8288" -> "x";
    "Statement_8624" -> "print";
    "Statement_8624" -> "Expression_9072";
    "Expression_9072" -> "y";
    "Statement_8960" -> "while";
    "Statement_8960" -> "Condition_9184";
    "Statement_8960" -> "do";
    "Statement_8960" -> "Statement_9632";
    "Condition_9184" -> "Expression_9296";
    "Condition_9184" -> "<";
    "Condition_9184" -> "Expression_9408";
    "Expression_9296" -> "x";
    "Expression_9408" -> "100";
    "Statement_9632" -> "{";
    "Statement_9632" -> "Statement_9744";
    "Statement_9632" -> "Statement_3552";
    "Statement_9632" -> "}";
    "Statement_9744" -> "x";
    "Statement_9744" -> "=";
    "Statement_9744" -> "Expression_3328";
    "Expression_3328" -> "Expression_3216";
    "Expression_3328" -> "+";
    "Expression_3328" -> "Expression_3440";
    "Expression_3216" -> "x";
    "Expression_3440" -> "10";
    "Statement_3552" -> "print";
    "Statement_3552" -> "Expression_3664";
    "Expression_3664" -> "x";
}

}